%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Jun 14 16:46:05 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Michael Murphy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 14 16:46:05 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
854 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 890 M
6052 0 V
stroke
LTb
938 890 M
63 0 V
5989 0 R
-63 0 V
854 890 M
( 200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1333 M
6052 0 V
stroke
LTb
938 1333 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1775 M
6052 0 V
stroke
LTb
938 1775 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2218 M
6052 0 V
stroke
LTb
938 2218 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2660 M
6052 0 V
stroke
LTb
938 2660 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3102 M
6052 0 V
stroke
LTb
938 3102 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3545 M
6052 0 V
stroke
LTb
938 3545 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3987 M
6052 0 V
stroke
LTb
938 3987 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4430 M
6052 0 V
stroke
LTb
938 4430 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4872 M
6052 0 V
stroke
LTb
938 4872 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 2000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4424 V
stroke
LTb
938 448 M
0 63 V
0 4361 R
0 -63 V
938 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1610 448 M
0 4424 V
stroke
LTb
1610 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2283 448 M
0 4424 V
stroke
LTb
2283 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
2955 448 M
0 4424 V
stroke
LTb
2955 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3628 448 M
0 4424 V
stroke
LTb
3628 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4300 448 M
0 4424 V
stroke
LTb
4300 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4973 448 M
0 4221 V
0 140 R
0 63 V
stroke
LTb
4973 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5645 448 M
0 4221 V
0 140 R
0 63 V
stroke
LTb
5645 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6318 448 M
0 4221 V
0 140 R
0 63 V
stroke
LTb
6318 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4424 V
stroke
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4500) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Ynew) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(X) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
(Line identifications) Rshow
LT0
1162 4539 Pls
1447 4556 Pls
1677 4570 Pls
1990 4588 Pls
3167 4659 Pls
3257 4665 Pls
3286 4667 Pls
3455 4677 Pls
4192 4723 Pls
4370 4734 Pls
4499 4742 Pls
5053 4778 Pls
5081 4779 Pls
5265 4791 Pls
6050 4843 Pls
1230 4201 Pls
1271 4204 Pls
1655 4226 Pls
1878 4239 Pls
2014 4247 Pls
2145 4255 Pls
2163 4256 Pls
2403 4270 Pls
2504 4276 Pls
2959 4304 Pls
3006 4306 Pls
3351 4327 Pls
3570 4341 Pls
3594 4342 Pls
3892 4360 Pls
4170 4377 Pls
4226 4381 Pls
4319 4387 Pls
4359 4389 Pls
4556 4401 Pls
4691 4410 Pls
4958 4427 Pls
5087 4435 Pls
5168 4440 Pls
5311 4449 Pls
5525 4462 Pls
5867 4485 Pls
5981 4492 Pls
6313 4513 Pls
1112 3863 Pls
1180 3867 Pls
1341 3876 Pls
1431 3881 Pls
1524 3887 Pls
1677 3896 Pls
1885 3908 Pls
1930 3911 Pls
1999 3915 Pls
2062 3918 Pls
2113 3921 Pls
2304 3932 Pls
2825 3963 Pls
3094 3979 Pls
3183 3984 Pls
3378 3996 Pls
3477 4002 Pls
3494 4003 Pls
4337 4054 Pls
4431 4060 Pls
4663 4074 Pls
5188 4106 Pls
5338 4116 Pls
5429 4121 Pls
5728 4140 Pls
5948 4154 Pls
6316 4177 Pls
6379 4181 Pls
1134 3543 Pls
1296 3552 Pls
1592 3569 Pls
1846 3584 Pls
2295 3610 Pls
2548 3624 Pls
2780 3638 Pls
2854 3642 Pls
3027 3653 Pls
3196 3662 Pls
3243 3665 Pls
3277 3667 Pls
3331 3670 Pls
4060 3714 Pls
4227 3724 Pls
4253 3725 Pls
4757 3755 Pls
4815 3759 Pls
4883 3763 Pls
4924 3765 Pls
5095 3776 Pls
5137 3778 Pls
5944 3828 Pls
6036 3833 Pls
6139 3840 Pls
6388 3855 Pls
1016 3224 Pls
1103 3228 Pls
1264 3238 Pls
1387 3245 Pls
1859 3272 Pls
2042 3282 Pls
2233 3293 Pls
2435 3305 Pls
2490 3308 Pls
2909 3332 Pls
3324 3357 Pls
3627 3374 Pls
3759 3382 Pls
3840 3387 Pls
3998 3396 Pls
4013 3397 Pls
4074 3400 Pls
4301 3414 Pls
4386 3419 Pls
4628 3433 Pls
4645 3434 Pls
5234 3469 Pls
5400 3479 Pls
5425 3480 Pls
5682 3495 Pls
5975 3513 Pls
6221 3528 Pls
1597 2953 Pls
1928 2972 Pls
2029 2978 Pls
2292 2993 Pls
2310 2994 Pls
2353 2996 Pls
2474 3003 Pls
2536 3007 Pls
2731 3018 Pls
2821 3023 Pls
2914 3029 Pls
2956 3031 Pls
3047 3036 Pls
3115 3040 Pls
3159 3043 Pls
3301 3051 Pls
3579 3067 Pls
3610 3068 Pls
3658 3071 Pls
3683 3073 Pls
3996 3091 Pls
4059 3094 Pls
4289 3108 Pls
4627 3127 Pls
4674 3130 Pls
4760 3135 Pls
4879 3142 Pls
5060 3152 Pls
5156 3158 Pls
5210 3161 Pls
5434 3174 Pls
5667 3188 Pls
5710 3190 Pls
5744 3192 Pls
5838 3198 Pls
6081 3212 Pls
6267 3223 Pls
1204 2636 Pls
1251 2639 Pls
1309 2642 Pls
1477 2652 Pls
1987 2680 Pls
2108 2687 Pls
2271 2697 Pls
2306 2698 Pls
2449 2707 Pls
2624 2717 Pls
2703 2721 Pls
2774 2725 Pls
3312 2756 Pls
3360 2758 Pls
3615 2773 Pls
3781 2782 Pls
3850 2786 Pls
4269 2810 Pls
4444 2820 Pls
4479 2822 Pls
4512 2824 Pls
4583 2828 Pls
4810 2840 Pls
4905 2846 Pls
5212 2863 Pls
5260 2866 Pls
5526 2881 Pls
5704 2892 Pls
1329 2357 Pls
1371 2359 Pls
1478 2365 Pls
2316 2412 Pls
2352 2414 Pls
2656 2431 Pls
2708 2434 Pls
2999 2450 Pls
3019 2451 Pls
3053 2453 Pls
3286 2466 Pls
3899 2501 Pls
4013 2507 Pls
4441 2531 Pls
4473 2533 Pls
4866 2555 Pls
4953 2560 Pls
4989 2562 Pls
5129 2569 Pls
5818 2608 Pls
5888 2612 Pls
5974 2617 Pls
6226 2631 Pls
1676 2097 Pls
1849 2107 Pls
1998 2115 Pls
2288 2131 Pls
2339 2134 Pls
2448 2140 Pls
2531 2145 Pls
2844 2162 Pls
3297 2187 Pls
3400 2193 Pls
3469 2197 Pls
3571 2202 Pls
3744 2212 Pls
4228 2239 Pls
4391 2248 Pls
4461 2251 Pls
4504 2254 Pls
4563 2257 Pls
4624 2260 Pls
4940 2278 Pls
5223 2293 Pls
5921 2331 Pls
5983 2335 Pls
6144 2344 Pls
1250 1802 Pls
1385 1810 Pls
1506 1816 Pls
1881 1837 Pls
1965 1842 Pls
2035 1846 Pls
2204 1855 Pls
2844 1890 Pls
3665 1935 Pls
3714 1938 Pls
3760 1940 Pls
3956 1951 Pls
4643 1988 Pls
5088 2012 Pls
5220 2019 Pls
5413 2029 Pls
6359 2080 Pls
1179 1534 Pls
1509 1553 Pls
1757 1566 Pls
1806 1569 Pls
1822 1570 Pls
1900 1574 Pls
3144 1642 Pls
3484 1660 Pls
3564 1665 Pls
3696 1672 Pls
3711 1672 Pls
3969 1686 Pls
4397 1709 Pls
4500 1715 Pls
4546 1717 Pls
4844 1733 Pls
5651 1775 Pls
5848 1786 Pls
6025 1795 Pls
1209 1279 Pls
1290 1283 Pls
1345 1286 Pls
1514 1296 Pls
1594 1300 Pls
1611 1301 Pls
1837 1313 Pls
1960 1320 Pls
1989 1322 Pls
2045 1325 Pls
3217 1388 Pls
3276 1391 Pls
3457 1401 Pls
3548 1406 Pls
3568 1407 Pls
3747 1416 Pls
4124 1436 Pls
4438 1452 Pls
4859 1474 Pls
5144 1489 Pls
5476 1506 Pls
5954 1531 Pls
6320 1549 Pls
6394 1553 Pls
6417 1554 Pls
1114 1023 Pls
1182 1027 Pls
1519 1046 Pls
1912 1067 Pls
2090 1077 Pls
2413 1094 Pls
2440 1095 Pls
3071 1129 Pls
3419 1147 Pls
3955 1175 Pls
4128 1184 Pls
4704 1214 Pls
4814 1219 Pls
5049 1231 Pls
5449 1252 Pls
5565 1258 Pls
5643 1261 Pls
5888 1274 Pls
6005 1280 Pls
6028 1281 Pls
6363 1298 Pls
1427 796 Pls
1491 800 Pls
1599 806 Pls
1665 809 Pls
1788 816 Pls
1806 817 Pls
2053 830 Pls
2213 839 Pls
2300 843 Pls
2639 861 Pls
2654 862 Pls
2787 869 Pls
3011 881 Pls
3031 882 Pls
3045 883 Pls
3186 890 Pls
3889 927 Pls
3939 929 Pls
3976 931 Pls
4211 943 Pls
4232 944 Pls
4470 956 Pls
5145 990 Pls
5166 991 Pls
5247 995 Pls
5343 1000 Pls
5823 1024 Pls
6401 1052 Pls
1173 545 Pls
1260 549 Pls
1299 552 Pls
1379 556 Pls
1524 564 Pls
1595 568 Pls
1741 575 Pls
1777 577 Pls
1863 582 Pls
1895 584 Pls
2108 595 Pls
2471 614 Pls
2573 620 Pls
2618 622 Pls
2836 633 Pls
2871 635 Pls
2922 638 Pls
2985 641 Pls
3613 673 Pls
4212 704 Pls
5110 748 Pls
5160 751 Pls
5623 773 Pls
5716 778 Pls
5869 785 Pls
5966 790 Pls
6145 798 Pls
6172 799 Pls
4799 499 Pls
4881 503 Pls
4923 505 Pls
5203 518 Pls
5323 524 Pls
5378 527 Pls
5491 532 Pls
5696 542 Pls
5797 547 Pls
6007 557 Pls
6060 559 Pls
6185 565 Pls
6232 567 Pls
6622 4739 Pls
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
