%!PS-Adobe-2.0
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Jun 14 16:31:05 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Michael Murphy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 14 16:31:05 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
854 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 890 M
6052 0 V
stroke
LTb
938 890 M
63 0 V
5989 0 R
-63 0 V
854 890 M
( 200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1333 M
6052 0 V
stroke
LTb
938 1333 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1775 M
6052 0 V
stroke
LTb
938 1775 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2218 M
6052 0 V
stroke
LTb
938 2218 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2660 M
6052 0 V
stroke
LTb
938 2660 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3102 M
6052 0 V
stroke
LTb
938 3102 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3545 M
6052 0 V
stroke
LTb
938 3545 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3987 M
6052 0 V
stroke
LTb
938 3987 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4430 M
6052 0 V
stroke
LTb
938 4430 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 1800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4872 M
6052 0 V
stroke
LTb
938 4872 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 2000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4424 V
stroke
LTb
938 448 M
0 63 V
0 4361 R
0 -63 V
938 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1610 448 M
0 4424 V
stroke
LTb
1610 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2283 448 M
0 4424 V
stroke
LTb
2283 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
2955 448 M
0 4424 V
stroke
LTb
2955 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3628 448 M
0 4424 V
stroke
LTb
3628 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4300 448 M
0 4424 V
stroke
LTb
4300 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4973 448 M
0 4221 V
0 140 R
0 63 V
stroke
LTb
4973 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5645 448 M
0 4221 V
0 140 R
0 63 V
stroke
LTb
5645 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6318 448 M
0 4221 V
0 140 R
0 63 V
stroke
LTb
6318 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4424 V
stroke
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4500) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Ynew) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(X) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 4739 M
(Line identifications) Rshow
LT0
1161 4540 Pls
1447 4557 Pls
1677 4570 Pls
1990 4589 Pls
3167 4660 Pls
3257 4665 Pls
3286 4667 Pls
3454 4677 Pls
4192 4723 Pls
4370 4734 Pls
4498 4743 Pls
5053 4778 Pls
5081 4780 Pls
5265 4792 Pls
6050 4843 Pls
1229 4202 Pls
1270 4204 Pls
1655 4227 Pls
1878 4240 Pls
2014 4248 Pls
2145 4255 Pls
2163 4257 Pls
2402 4271 Pls
2503 4277 Pls
2788 4294 Pls
2958 4304 Pls
3005 4307 Pls
3350 4328 Pls
3569 4341 Pls
3593 4342 Pls
3892 4361 Pls
4169 4378 Pls
4225 4381 Pls
4319 4387 Pls
4358 4389 Pls
4555 4402 Pls
4690 4410 Pls
4957 4427 Pls
5087 4435 Pls
5168 4440 Pls
5311 4449 Pls
5524 4463 Pls
5867 4485 Pls
5980 4492 Pls
6312 4514 Pls
1112 3863 Pls
1180 3867 Pls
1341 3877 Pls
1431 3882 Pls
1524 3887 Pls
1677 3896 Pls
1884 3908 Pls
1929 3911 Pls
1999 3915 Pls
2061 3919 Pls
2112 3922 Pls
2303 3933 Pls
2824 3964 Pls
3094 3980 Pls
3182 3985 Pls
3377 3996 Pls
3476 4002 Pls
3494 4003 Pls
4337 4054 Pls
4431 4060 Pls
4663 4074 Pls
5188 4107 Pls
5338 4116 Pls
5428 4122 Pls
5727 4140 Pls
5948 4154 Pls
6315 4177 Pls
6379 4181 Pls
1133 3543 Pls
1295 3552 Pls
1591 3569 Pls
1846 3584 Pls
2294 3610 Pls
2547 3625 Pls
2779 3638 Pls
2854 3643 Pls
3027 3653 Pls
3196 3663 Pls
3243 3666 Pls
3276 3668 Pls
3330 3671 Pls
4060 3714 Pls
4226 3724 Pls
4253 3725 Pls
4756 3756 Pls
4815 3759 Pls
4882 3763 Pls
4924 3766 Pls
5094 3776 Pls
5137 3779 Pls
5944 3828 Pls
6035 3834 Pls
6139 3840 Pls
6387 3855 Pls
986 3222 Pls
1015 3224 Pls
1102 3229 Pls
1264 3238 Pls
1387 3245 Pls
1859 3272 Pls
2042 3283 Pls
2233 3294 Pls
2435 3305 Pls
2489 3308 Pls
2908 3333 Pls
3324 3357 Pls
3627 3375 Pls
3758 3382 Pls
3839 3387 Pls
3998 3396 Pls
4013 3397 Pls
4074 3401 Pls
4300 3414 Pls
4385 3419 Pls
4627 3433 Pls
4645 3434 Pls
5234 3469 Pls
5400 3479 Pls
5424 3480 Pls
5682 3496 Pls
5974 3513 Pls
6220 3528 Pls
1069 2924 Pls
1597 2954 Pls
1927 2972 Pls
2029 2978 Pls
2292 2993 Pls
2310 2994 Pls
2352 2997 Pls
2474 3004 Pls
2535 3007 Pls
2730 3018 Pls
2820 3024 Pls
2913 3029 Pls
2955 3031 Pls
3046 3036 Pls
3115 3040 Pls
3158 3043 Pls
3301 3051 Pls
3579 3067 Pls
3609 3069 Pls
3658 3072 Pls
3683 3073 Pls
3995 3091 Pls
4059 3095 Pls
4289 3108 Pls
4626 3127 Pls
4674 3130 Pls
4759 3135 Pls
4878 3142 Pls
5059 3153 Pls
5155 3158 Pls
5210 3161 Pls
5434 3174 Pls
5666 3188 Pls
5709 3191 Pls
5743 3192 Pls
5838 3198 Pls
6080 3212 Pls
6267 3223 Pls
1203 2637 Pls
1251 2639 Pls
1308 2642 Pls
1476 2652 Pls
1986 2681 Pls
2107 2688 Pls
2271 2697 Pls
2305 2699 Pls
2448 2707 Pls
2623 2717 Pls
2703 2721 Pls
2773 2725 Pls
3312 2756 Pls
3360 2759 Pls
3615 2773 Pls
3780 2782 Pls
3850 2786 Pls
4269 2810 Pls
4443 2820 Pls
4479 2822 Pls
4512 2824 Pls
4582 2828 Pls
4809 2841 Pls
4905 2846 Pls
5212 2864 Pls
5260 2867 Pls
5526 2882 Pls
5703 2892 Pls
1328 2357 Pls
1370 2359 Pls
1478 2365 Pls
2316 2412 Pls
2352 2415 Pls
2655 2432 Pls
2707 2434 Pls
2999 2451 Pls
3018 2452 Pls
3052 2454 Pls
3285 2467 Pls
3898 2501 Pls
4012 2507 Pls
4440 2531 Pls
4472 2533 Pls
4866 2555 Pls
4953 2560 Pls
4988 2562 Pls
5128 2570 Pls
5817 2608 Pls
5888 2612 Pls
5973 2617 Pls
6225 2631 Pls
1676 2098 Pls
1848 2107 Pls
1997 2116 Pls
2287 2132 Pls
2339 2135 Pls
2447 2141 Pls
2530 2145 Pls
2844 2163 Pls
3297 2188 Pls
3400 2193 Pls
3469 2197 Pls
3571 2203 Pls
3743 2212 Pls
4228 2239 Pls
4391 2248 Pls
4460 2252 Pls
4503 2254 Pls
4562 2257 Pls
4624 2261 Pls
4940 2278 Pls
5223 2294 Pls
5920 2332 Pls
5983 2335 Pls
6143 2344 Pls
1250 1803 Pls
1385 1810 Pls
1506 1817 Pls
1880 1838 Pls
1964 1842 Pls
2034 1846 Pls
2204 1856 Pls
2843 1891 Pls
3664 1936 Pls
3714 1938 Pls
3760 1941 Pls
3956 1951 Pls
4643 1989 Pls
5088 2012 Pls
5220 2020 Pls
5412 2030 Pls
6359 2081 Pls
1178 1535 Pls
1509 1553 Pls
1756 1567 Pls
1806 1569 Pls
1821 1570 Pls
1900 1575 Pls
3144 1642 Pls
3484 1661 Pls
3564 1665 Pls
3695 1672 Pls
3711 1673 Pls
3968 1687 Pls
4397 1709 Pls
4499 1715 Pls
4546 1717 Pls
4844 1733 Pls
5650 1776 Pls
5847 1786 Pls
6024 1795 Pls
1208 1279 Pls
1290 1284 Pls
1344 1287 Pls
1514 1296 Pls
1594 1301 Pls
1610 1301 Pls
1836 1314 Pls
1960 1321 Pls
1989 1322 Pls
2045 1325 Pls
3216 1388 Pls
3275 1391 Pls
3456 1401 Pls
3548 1406 Pls
3567 1407 Pls
3746 1416 Pls
4124 1436 Pls
4438 1453 Pls
4859 1475 Pls
5144 1489 Pls
5475 1507 Pls
5953 1531 Pls
6319 1550 Pls
6393 1554 Pls
6417 1555 Pls
1040 1020 Pls
1113 1024 Pls
1182 1027 Pls
1518 1046 Pls
1912 1067 Pls
2090 1077 Pls
2413 1094 Pls
2439 1096 Pls
3071 1129 Pls
3418 1148 Pls
3954 1176 Pls
4128 1185 Pls
4704 1214 Pls
4814 1220 Pls
5049 1232 Pls
5448 1252 Pls
5564 1258 Pls
5642 1262 Pls
5887 1274 Pls
6004 1280 Pls
6028 1281 Pls
6363 1298 Pls
1426 797 Pls
1491 800 Pls
1598 806 Pls
1665 810 Pls
1788 816 Pls
1806 817 Pls
2053 831 Pls
2212 839 Pls
2300 844 Pls
2639 862 Pls
2654 863 Pls
2786 870 Pls
3011 881 Pls
3031 883 Pls
3045 883 Pls
3185 891 Pls
3888 927 Pls
3939 930 Pls
3975 931 Pls
4210 943 Pls
4232 944 Pls
4469 957 Pls
4511 959 Pls
5144 990 Pls
5165 991 Pls
5247 995 Pls
5343 1000 Pls
5823 1024 Pls
6401 1052 Pls
1173 545 Pls
1259 550 Pls
1299 552 Pls
1379 556 Pls
1524 564 Pls
1594 568 Pls
1740 576 Pls
1776 578 Pls
1862 582 Pls
1894 584 Pls
2108 596 Pls
2470 615 Pls
2572 620 Pls
2617 622 Pls
2835 634 Pls
2870 636 Pls
2922 638 Pls
2984 642 Pls
3613 674 Pls
4211 704 Pls
5110 749 Pls
5160 751 Pls
5623 773 Pls
5715 778 Pls
5869 785 Pls
5965 790 Pls
6145 799 Pls
6171 800 Pls
4798 499 Pls
4880 503 Pls
4922 505 Pls
5202 519 Pls
5322 525 Pls
5378 527 Pls
5490 533 Pls
5696 542 Pls
5796 547 Pls
6006 557 Pls
6059 559 Pls
6185 565 Pls
6232 567 Pls
6622 4739 Pls
1.000 UL
LTb
938 4872 N
938 448 L
6052 0 V
0 4424 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
